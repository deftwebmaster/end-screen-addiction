---
import { storyblokEditable, renderRichText } from "@storyblok/astro";
import AccordionVue from "@components/helpers/AccordionVue.vue";

interface Props {
  blok: AccordionStoryblok;
}

const { blok } = Astro.props;
const {
  content,
  surface = "",
  align = "",
  items = [],
  padding_top = "pt-lg",
  padding_bottom = "pb-lg",
  container = "breakout",
  is_faq = false,
} = blok;

const renderedRichText = renderRichText(content);

const accordion_items = await Promise.all(
  items.map(async (item: any) => {
    return {
      title: item.title,
      content: renderRichText(item.content),
    };
  }),
);
let json:string | undefined;

if (is_faq) {
  json = `
      {
        "@context": "https://schema.org",
        "@type": "FAQPage",
        "mainEntity": [
          ${accordion_items
            .map(
              (item: any) => `
            {
              "@type": "Question",
              "name": "${item.title.replace(/"/g, '\\"')}",
              "acceptedAnswer": {
                "@type": "Answer",
                "text": "${item?.content?.replace(/"/g, '\\"').replace(/\n/g, "")}"
              }
            }
          `,
            )
            .join(",")}
        ]
      }
    `;
}
---

<div {...storyblokEditable(blok)} class={`${surface} intersection`}>
  <div class="content-grid">
    <div
      class={`${container} ${align} ${padding_top} ${padding_bottom} scale-in grid h-fit w-full grid-cols-1 gap-8 `}
    >
      <div set:html={renderedRichText} class="richtext max-w-3xl" />
      {
        accordion_items.length > 0 && (
          <AccordionVue items={accordion_items} client:visible />
        )
      }
    </div>
  </div>
</div>
{json && <script type="application/ld+json" set:html={json} is:inline />}
